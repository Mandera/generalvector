
name: UnitTest and Publish

on:
  push:
    branches: master

jobs:

  unittest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.7]
        os: [ubuntu-latest]
#        python-version: [3.7, 3.8]
#        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: Run unittests
        run: |
          python -m unittest discover


  publisher:
    needs: unittest
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install latest release to get version
      id: getlatest
      run: |
        python -m pip install --upgrade pip
        pip install ${{ github.event.repository.name }}
        echo "LATEST_PUBLISHED_VERSION=$(pip show ${{ github.event.repository.name }} | grep Version)" >> $GITHUB_ENV

    - uses: jungwinter/split@v1
      id: split
      with:
        msg: ${{ env.LATEST_PUBLISHED_VERSION }}
#          msg: $LATEST_PUBLISHED_VERSION

    - name: Checkout latest release
      uses: actions/checkout@v2

    - name: Print info
      run: |
        python setup.py --version
        echo $LATEST_PUBLISHED_VERSION
        echo ${{ steps.split.outputs._1 }}

    - name: Publish
      if: python setup.py --version != ${{ steps.split.outputs._1 }}
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install twine
        python setup.py sdist bdist_wheel
        twine upload dist/*












































